<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd"><html dir="ltr" xmlns="http://www.w3.org/1999/xhtml">  <head>    <meta http-equiv="content-type" content="application/xhtml+xml; charset=iso-8859-1" />    <meta content="built-in oma2 help pages" name="description" />    <meta content="image processing" name="keywords" />    <meta content="oma developers" name="author" />    <link media="screen" href="Light/default.css" type="text/css" rel="stylesheet" />    <title>OMA2 Help</title>  </head>  <body>    <div class="container">      <div class="navigation">        <div class="title">          <h1>OMA2</h1>          <h2>- Help -</h2>        </div>        <a href="CommandIndex.html">Index</a> <a href="macro.html">Macro</a> <a          href="file.html">I          / O</a> <a href="display.html">Display</a> <a href="arithmetic.html">Processing</a>        <a href="index.html">First Steps</a>        <div class="clearer"><span></span></div>      </div>      <div class="holder">        <h1>Command Index</h1>        <br />        + x<br />            Adds x to the data in the current image data buffer.<br />        <br />        +RGB x y z<br />            Adds x, y, and z to the red, green, and blue data in the current        image data buffer.<br />        <br />        - x<br />            Subtracts x from the data in the current image data buffer.<br />        <br />        -RGB x y z<br />            Subtracts x, y, and z from the red, green, and blue data in the        current image data buffer.<br />        <br />        * x<br />            Multiplies the data in the current image data buffer by x.<br />        <br />        *RGB x y z<br />            Multiply the red, green, and blue data in the current image data        buffer by x, y, and z.<br />        <br />        / x<br />            Divides the data in the current image data buffer by x.<br />        <br />        /RGB x y z<br />            Divide the red, green, and blue data in the current image data        buffer by x, y, and z.<br />        <br />        ^ x<br />            Raises the data in the current image data to the power x.<br />        <br />        ^RGB x y z<br />            Raise the red, green, and blue data in the current image data buffer        to the power x, y, and z.<br />        <br />        ABSOLUTE<br />            Take the absolute value of the data in the current image data        buffer.<br />        <br />        ADDFILE &lt;filename&gt;<br />            Adds the contents of an OMA file of a given name to the data in the        current image data buffer.<br />        <br />        ADDTMPIMAGE name<br />            Adds the contents of the named temporary image to the data in the        current image data buffer.<br />        <br />        ABEL<br />            Calculate the abel inversion using three-point abel inversion        operator Di,j. The index i,j start from 0. The formula followed Dasch        1992 (Applied Optics) which contains several typos. One correction is        done in function OP1 following  Martin's PhD thesis.<br />        <br />        ABELRECT rec_width [rec_y0 rec_y1]<br />            Sets the rectangle (of width rec_width) according to the centroid of        the image. If rec_y0 and rec_y1 are omitted, they are taken to be the        top and bottom of the image.<br />        <br />        ABELPREP clip_value [fill_value]<br />            Finds the maximum pixel value along horizontal lines in the image.        If that maximum is &lt; clip_value, the entire horizontal line is set to        fill_value. Default for fill_value is 0.<br />        <br />        ACADD<br />            Adds the current image data buffer to the accumulator buffer.<br />        <br />        ACCUMULATE<br />            Allocates and clears memory for an image accumulator buffer that can        be used to sum individual images. The size of the accumulator is        determined by the image size parameters when the accumulate command is        first given.<br />        <br />        ACDELETE<br />            Frees the memory associated with the accumulator. <br />        <br />        ACGET<br />            Moves the data from the accumulator buffer into the current image        data area. The previous contents of the image data buffer are destroyed.<br />        <br />        AINPUT channel<br />            Read analog input from the specified channel on a LabJack U3.        Channel must be in the range 0-3; The voltage is returned in        command_return_1. [oma2cam only]<br />        <br />        AOUTPUT v1 v2<br />            Sends voltages to D/A converters 0 and 1 on a Labjack USB U3        analog/digital I/O device. [oma2cam only]<br />        <br />        ACMEVELOCITY telemetryFileName<br />            For ACME color data camera images, this returns values for the        velocities of the coflow, N2, and fuel, along with their relative        MAXIMUM deviations. The data for this is based on the timestamp in the        image file name and data in the telemetry file. The command requires the        following variables to be defined beforehand: [qtOma Command]<br />            mfc2Range<br />            fuelCorrection<br />            exposure<br />            name<br />        <br />        BLOCK n [m]<br />            Group the image data into n x m blocks (rows x cols). This command        reduces the size of the data buffer. The values are summed, pending        implementation of the BLKAVE command. If the image is flagged as color,        the three color planes are treated separately.<br />        <br />        BIT8 [min] [max]<br />            Converts the file in the OMA image buffer to have a dynamic range of        0 to 255. That is, 8 unsigned bits per pixel. This conversion is        automatically done before saving the image buffer as a TIFF image. If        the optional min and max are specified, they are used for the scaling        rather than the min and max of the current image buffer.<br />        <br />        BIT16 [min] [max]<br />            Converts the file in the OMA image buffer to have a dynamic range of        0 to 65535. That is, 16 unsigned bits per pixel. This conversion is        automatically done before saving the image buffer as a TIFF image with        the SATIFFSCALED command. If the optional min and max are specified,        they are used for the scaling rather than the min and max of the current        image buffer.<br />        <br />        BINARGUMENTS rows columns headerBytes bytesPerDataPoint swapBytesFlag        [unsignedFlag]<br />            Specify parameters for reading in binary files. If bytesPerDataPoint        is -sizeof(float), the binary data are treated as float. Other        reasonable values would be 1, 2, or 4. The extension for binary files is        specified using the BINEXTENSION command. Once these are specified,        binary files can be read in using the GET command, or by dropping them        onto the status window.<br />        <br />        BINEXTENSION fileExtension<br />            Specify the extension for binary files. Together with the        BINARGUMENTS command, this allows binary files to be read in with GET or        dropped onto the status window.<br />        <br />        BOUNDBOX targetValue [setRectFlag]<br />            Returns the bounds of a rectangle that encloses any part of the        image that has a value &gt;= targetValue. If setRectFlag is nonzero, the        current rectangle will be set by the results. command_return 1-4 are set        to the bounds.<br />        <br />        BLEED thresholdCount fraction<br />            For correcting readout errors on a CCD detector, where intensity        from one pixel bleeds into an adjacent pixel on readout. No correction        is made when the value is less than thresholdCount. For a pixel with        pixValue greater than thresholdCount, pixValue is increased by         (pixValue-thresholdCount)*fraction. The pixel in the next column is        decreased by the same amount.<br />        <br />        CALCULATE<br />            Print calculations on the rectangle specified with the RECTANGLE        command or with the rectangle tools. The average, rms, # of points, and        the x and y "center of mass" are printed. The mean, rms, centroid_X and        centroid_Y are passed to the command_return_variables.<br />        <br />        CALCALL<br />            Print calculations on the entire image. The average, rms, # of        points, and the x and y "center of mass" are printed. The mean, rms,        centroid_X and centroid_Y are passed to the command_return_variables.<br />        <br />        CLIP value<br />            Sets all data values in the current image buffer that are &gt; value        to value.<br />        <br />        CLIPBOTTOM clip_value<br />            For the current image, set pixels whose value is &lt; clip_value to        be equal to clip_value.<br />        <br />        CLIPFBOTTOM clip_fraction<br />            For the current image, set pixels whose value is &lt;        clip_fraction*image_max to be equal to clip_fraction*image_max.<br />        <br />        CLIPFRACTION fraction<br />            Clip data at a fraction of the maximum value. Fraction is a real        argument.<br />        <br />        CROP<br />            Use the current rectangle to crop the image in the buffer.<br />        <br />        COLUMNS n<br />            Resets the number of columns in the current image to n.<br />        <br />        COMPOSITE  &lt;filename&gt;<br />            Create a composite image by appending the data in the specified file        to that which exists in the current image buffer. The width of the        specified file must be the same as that of the current image. <br />        <br />        COMTEMPIMAGE name <br />            Create a composite image by appending the data in the named        temporary image to that which exists in the current image buffer. The        width of the specified temporary image be the same as that of the        current image.<br />            <br />        COLORFLAG [value]<br />            If an argument is given, the IS_COLOR flag is set to 0 (flag = 0) or        1 (anything else). If no argument is given, the current value of the        color flag is printed.<br />        <br />        CMINMX n m <br />            Specifies the minimum (n) and maximum (m) values in the data that        correspond to the minimum and maximum color or gray scale values.        Specifying the values causes the "Auto Scale" feature to be disabled. If        the arguments are not given, the "Auto Scale" feature is enabled.<br />        <br />        CYL2<br />            Treat the data in the current image as a half cross section of a        cylindrically symmetric intensity distribution. The centerline is        assumed to be along the LHS of the image. An integrated image is        calculated by rotating the image  about the centerline. Does a parallel        projection.<br />        <br />        CLEARBADPIX<br />             Sets pixels tagged as bad (e.g., with the FINDBADPIX or READBADPIX        commands) to the value of their 8 nearest neighbors. This will not work        well if there are contiguous bad pixels. For that, consider using the        FILBOX or FILMSK commands. See also FINDBADPIX, CCLEARBADPIX,        WRITEBADPIX, and READBADPIX.<br />        <br />        CCLEARBADPIX<br />            For un-demosaiced color images, sets pixels tagged as bad (e.g.,        with the FINDBADPIX or READBADPIX commands) to the value of their 8        nearest same-color neighbors. This will not work well if there are        contiguous bad pixels. For that, consider using the FILBOX or FILMSK        commands. See also FINDBADPIX, CLEARBADPIX, WRITEBADPIX, and READBADPIX.<br />        <br />        CAPTURE file_name<br />            [This command is only available in oma2cam. libgphoto2 must be        installed.] Uses libgphoto2 calls to capture and download an image from        a digital camera that is recognized by libgphoto2 (and supports        capture).<br />        <br />        CREATEFILE &lt;filename&gt;<br />            Opens a file with the specified name, saves the current data and        format information, and leaves the file open. Subsequently, the        CONCATFILE command can be used to add more data to the open file. use        CLOSEFILE to close the file. See also OPENFILE and GETNEXTFILE.<br />        <br />        CONCATFILE<br />            Saves the current data buffer to the file opened with the CREATEFILE        command. See also OPENFILE and GETNEXTFILE.<br />        <br />        CLOSEFILE<br />            Closes the file opened with the CREATEFILE command. See also        OPENFILE and GETNEXTFILE.<br />        <br />        CAMLISTSETTINGS<br />            [This command is only available in oma2cam. libgphoto2 must be        installed.] Uses gphoto2 calls to list the settings of the camera that        can be set, along with their current values.<br />        <br />        CAMGETSETTING  name<br />            [This command is only available in oma2cam. libgphoto2 must be        installed.] Uses gphoto2 calls to list the current value of the        specified setting, along with the allowed values for resetting it.<br />        <br />        CAMSETSETTING  name  new_setting_value<br />            [This command is only available in oma2cam. libgphoto2 must be        installed.] Uses gphoto2 calls to reset the value of the specified        setting to the new value. For a listing of valid setting values, use the        GETCAMSETTING command.<br />        <br />        CAMCLOSE<br />            [This command is only available in oma2cam. libgphoto2 must be        installed.] Disconnects from the digital camera accessed through        gphoto2.<br />        <br />        C2RGB<br />            If the current image is a color image, define temporary images named        r, g, and b that correspond to the red, green, and blue color channels.        The current image buffer is not modified.<br />        <br />        DISPLAY [string]<br />            Opens a window on the Macintosh screen and displays the contents of        the current data buffer. The color palette used can be determined by the        PALETTE command. The color minimum and maximum are specified by the        CMINMX command. There can be up to 9 image windows open at one time.        Windows can be resized, moved around the screen, and closed as in other        Macintosh applications. If the optional string is specified, the window        will be named according to the string.<br />        <br />        DMACRO [n] [command]<br />            Prompts the user for lines of a command macro to be executed using        the RMACRO command. If the argument n is omitted, definition starts with        line one. If n is specified, definition begins with the nth line of the        macro. To include numerical arguments that change each time the macro is        executed, %d can be inserted in the macro command at the location where        the number will be placed upon execution of the macro. If "command" is        not present, the program prompts for additional command lines until a        null command is entered (i.e. &lt;CR&gt; only). If the optional        "command" is included on the same line, the text of "command" replaces        any command already existing at line n and no further command lines are        solicited. Dummy arguments in Macros or Execute files include the        following:<br />            %c  the number of seconds since OMA was started (float)<br />            %d  a decimal digit<br />            %s  the string specified by the STRMAC command<br />            %f  last file name<br />            %b  maximum value (big)<br />            %l  minimum value (little)<br />            %m  multiplier (the current scale factor)<br />            %t  current date and time<br />            %v  an integer value that increments by a specified amount every        time it is used<br />            Use the VALMAC command to specify the starting value and increment.<br />            %e  the result of the last error code (0 means no error)<br />            %a  the average within the currently defined rectangle<br />            %r  the rms within the currently defined rectangle<br />            %h  the height of the current image<br />            %w  the width of the current image<br />            %x  the x pixel coordinate of the last mouse click<br />            %y  the y pixel coordinate of the last mouse click<br />            %p    Filled in with the "save data" prefix<br />            %q    Filled in with the "get data" prefix<br />        <br />        DIVFILE &lt;filename&gt;<br />            Divides the data in the current buffer by the contents of the        specified file.<br />        <br />        DIVTMPIMAGE name<br />            Divides the data in the current buffer by the contents of the named        temporary image.<br />        <br />        DIFFX<br />            Differentiate the data in the current image data buffer in the x        direction. <br />        <br />        DIFFY<br />            Differentiate the data in the current image data buffer in the y        direction.<br />        <br />        DCRAWARGS  [arguments]<br />            Allows the user to specify the arguments passed to the dcraw        routine, which decodes camera raw files to OMA format. Omitting the        argument lists the allowed arguments and gives the current argument        settings. The filename field is ignored.<br />        <br />        DELAY nticks<br />            Waits nticks/60 seconds before continuing on to the next command.        Use this for rough timing operations.<br />        <br />        DMNMX<br />            Displays the color min and max in the window.<br />        <br />        DX n<br />            Specifies the number of detector pixels (not display screen pixels)        to be grouped (or binned) in the X direction.<br />        <br />        DY n<br />            Specifies the number of detector pixels (not display screen pixels)        to be grouped (or binned) in the Y direction.<br />        <br />        DOC2RGB c1 c2 c3 c4<br />            Treat the image in the current image buffer as a raw document        (output from the dcraw routine with options -d or -D selected) and        convert it to an RGB image. This is assumed to have a 2 x 2 color matrix        of R G B values in a Bayer pattern. c1 - c4 have values 0, 1 or 2,        corresponding to red, green, and blue. For example, if Bayer Matrix is:<br />            G B<br />            R G<br />            c1 - c4 should be 1 2 0 1<br />            Appropriate values depend on the specific camera. (See the output        from the GET command when reading raw files.)<br />        <br />        DOC2COLOR c1 c2 c3 c4 c5<br />            Treat the image in the current image buffer as a raw document (e.g.,        output from the dcraw routine with options -d or -D selected) and        convert it to an R, G, or B image. This is assumed to have a 2 x 2 color        matrix of R G B values in a Bayer pattern. c1 - c4 have values 0, 1 or        2, corresponding to red, green, and blue. For example if Bayer Matrix is<br />            G B<br />            R G<br />            c1 - c4 should be 1 2 0 1<br />            c5 is 0, 1, or 2 for conversion to red, green, or blue. Pixels        associated with non-selected colors have a value of 0. Doing a BLOCK 2 2        command after this command will remove the zeros. Blocking 2 by 2 on the        green channel will sum the two green pixels.<br />        <br />        DISP2RGB<br />            Convert the display image to rgb. Use this to turn a false color        intensity map into an RGB image or to modify a color image so the values        follow the display settings. Returned values are integers between 0 -        255.<br />        <br />        DOUTPUT channel state<br />            Sets the specified digital output channel on a Labjack U3 to the        specified state (0 or 1). Channel must be in the range 4-7. [oma2cam        only]<br />        <br />        DINPUT channel<br />            Sets the specified digital channel on a Labjack U3 for input and        returns the state in command_return_1. Channel must be in the range 4-7.        [oma2cam only]<br />        <br />        DEMOSAIC redX redY [algorithm]<br />            Assume the current image is a raw Bayer intensity profile and        perform demosaicing to produce an RGB image of the same size with three        color channels. redX and redY are the x and y coordinates of the first        red pixel and must be either 0 or 1 (default is 0, 0). The optional        algorithm value specifies what demosaicing algorithm to apply. 0 -&gt;        bilinear (default). 1 -&gt; Malvar.<br />        <br />        DECODEHOBJ<br />            Assume the current image has the proprietary .hobj format (from        Halcon), and has not been decoded. This attempts to decode the image.        See the command HOBJSETTINGS for how this decoding can be done        automatically.<br />        <br />        DSATURATE [displaySaturationValue]<br />            This affects how the display command behaves when the Scale option        is selected. If a displaySaturationValue is specified, the Color Max        value used will be the dataMaxium*displaySaturationValue. If no argument        is given, the current value is printed.<br />        <br />        ERASE [n]<br />            If no argument is given, all image windows currently on the screen        are closed. If a value n is specified, only window n is erased.<br />        <br />        ECHO string<br />            Prints "string" during macro execution. "string" can be replaced        with any of the macro dummy arguments (e.g., ECHO %b).<br />        <br />        ENDIF<br />            Terminates an IF command. This is applicable within Macros only.<br />        <br />        EXECUTE &lt;filename&gt;<br />            Reads OMA commands stored in the specified file into a special        execute buffer and then performs those commands. Unlike macros, these        should not contain dummy numerical arguments (%d).<br />        <br />        EXPOSURE exposureValue<br />            Sets an exposure time to be used in generating HDR images. If no        argument is given, the value of the current exposure is echoed.<br />        <br />        EXTRA [index] [value]<br />            Add extra information to the current image in the form of a floating        point value. Indexing starts at 1. If both arguments are present, the        value is placed at the location specified by the index. If no argument        is given, the command lists extra values in the current image buffer and        puts the first ten extra values into the command_return variables. With        one argument, the extra value at the specified index is put into        command_return_1.<br />        <br />        FFT mode scale_factor<br />            mode = 0  return the magnitude scaled by scale_factor<br />            mode = 1  return the real part scaled by scale_factor<br />            mode = 2  return the imaginary part scaled by scale_factor<br />            mode = 3  return inverse - input is real part scaled by scale_factor<br />            mode = 4  return inverse - input is imaginary part scaled by        scale_factor<br />            mode = 5  return the log of the magnitude squared scaled by        scale_factor<br />            mode = 6  return the magnitude squared scaled by scale_factor<br />            mode = 7  return the autocorrelation scaled by scale_factor<br />            mode = 8  return inverse - input is a filter scaled by n<br />        <br />        FLOATVARIABLE variable_name<br />            Specifies that variable_name is to be used as a floating point        variable.<br />        <br />        FOLD fraction new_width<br />            Fold an image in half vertically. It is assumed to be symmetric        about some nearly verticle axis. The center of symmetry is found        separately for each row, except if there are dark regions at the top and        bottom of the image. For the dark regions, the average center of the        middle part of the image is used as the center of symmetry. Dark regions        are rows (at the top and bottom) whose values are all less than        fraction*image_max. x0,y0 and x1,y1 are coordinates of the top and        bottom of the dark region, center is the average center. These are        returned in command_return_1-5.<br />        <br />        FTEMPIMAGE tempImage<br />            Free memory associated with temporary image tempImage. tempImage        must be in the range 0-9, or correspond to a named image.<br />        <br />        FCLOSE<br />            Closes the currently open text file (there can be only one). The use        of FOPEN, FCLOSE, and FECHO allows derived values to be written to a        file from within a macro.<br />        <br />        FECHO string<br />            Writes the string to the file opened with FOPEN. A newLine is added        after the string unless the string ends in ..., in which case no newLine        is added. The use of FOPEN, FCLOSE, and FECHO allows derived values to        be written to a file from within a macro.<br />        <br />        FOPEN &lt;filename&gt;<br />            Open a text file with the name &lt;filename&gt; for I/O. The use of        FOPEN, FCLOSE, and FECHO allows derived values to be written to a file        from within a macro.<br />        <br />        FRAME NewWidth NewHeight [Value] [X0] [Y0]<br />            Put a "frame" around the current image. X0 and Y0 are the        coordinates of the start of the new image in the current image's        coordinate system. X0 and Y0 can be positive (will crop out some of the        current image) or negative (The new image will have a border with the        pixels containing the Value specified). If X0 or Y0 are not integers,        the routine will interpolate pixel values. Default Value is 0. Default        of X0 and Y0 center the old image in the frame.<br />        <br />        FINDBADPIX Counts [TargetValue] [Passes]<br />            Searches the current image buffer for pixels whose value is more        than "Counts" above that of its nearest eight neighbors. Those pixels        are tagged as hot pixels. This is best applied to a dark image. If the        optional TargetValue is specified, a different algorithm is used that        will get values from 1 to 8 neighboring pixels that are within the        specified number of counts of the target value. A reasonable TargetValue        would be the average A/D offset, e.g., from a dark frame. As currently        implemented, the alternate algorithm is not appropriate for raw images        from a color camera. The information is saved in an internal buffer. See        also CLEARBADPIX, CCLEARBADPIX, WRITEBADPIX, and READBADPIX.<br />        <br />        FWDATMATLAB  &lt;filename&gt; [delimiter]<br />            Writes the data in the current buffer as a text file. If no        delimiter is specified, tab is used and the file will have the Save File        extension. If the delimeter is "," the file gets the .csv extension.        Format is a matrix of values that can be loaded directly into matlab.<br />        <br />        GET &lt;filename&gt;<br />            Loads the data from the specified file into the current image data        buffer. The "Get Data Files" prefix is used. The "Get Data Files" suffix        is used unless the specified filename has a suffix of .jpg, .tiff, .tif,        or .nef; in those cases no suffix is added and the appropriate decoding        routines are called according to the file type.<br />        <br />        GETFILENAMES NameFile<br />            Open NameFile (uses get prefix and ".txt" as suffix), which contains        the names of files or directory paths. For files, the NEXTFILE command        is used to open the next file. For directory paths, the NEXTPREFIX        command is used to set the "Get File" prefix to the specified path.        NameFile is left open until all files have been accessed.<br />        <br />        GETMATCH parameterfile<br />            Load the file matching parameters contained in the text file        "parameterfile". The format of the file is as follows:<br />        x1_ref y1_ref x1_i1 y1_i1 x1_i2 y1_i2<br />        x2_ref y2_ref x2_i1 y2_i1 x2_i2 y2_i2<br />        image1_width image1_height<br />        image2_width image2_height<br />        <br />        GETSETTINGS [filename]<br />            Gets settings from the specified file (uses the appropriate prefix        and suffix specified in the preferences). If no filename is given, OMA        Settings from within the oma application are loaded.<br />        <br />        GETFUNCTION n filename<br />            Read in a tabulated function to be used by the LOOKUP command. n is        the function number to be defined. filename is file containing y=f(x)        data pairs, preceeded by number of table entries.<br />            Assumptions for tabulated functions:<br />            File format:<br />            first number is integer with the number of pairs to follow<br />            pairs are float with x followed by f(x) on the same line<br />            x values are ordered smallest to largest<br />            y = f(x) is single valued<br />        <br />        GETBINARYFILE &lt;filename&gt; rows columns headerBytes        bytesPerDataPoint swapBytesFlag [unsignedFlag]<br />            Read in a binary file with the specified parameters. If        bytesPerDataPoint is -sizeof(float), the binary data are treated as        float. Other reasonable values would be 1, 2, or 4. Specified parameters        do not change those set with the BINARGUMENTS command.<br />        <br />        GMACRO &lt;filename&gt;<br />            Loads the contents of the specified file into the current macro        buffer.<br />        <br />        GAUSSIAN EdgeValue [x0 y0]<br />            Generate a Gaussian distribution centered at x0, y0. If x0, and y0,        are not specified, the distribution is centered. The maximum is 1. For a        centered distribution, EdgeValue specifies the value of the distribution        at the center edge.<br />            <br />        GREY2RGB [scaleRed scaleGreen scaleBlue]<br />            Turns a single plane image into a three plane RGB image. The        optional weighting factors are applied to each color plane.<br />         <br />        GRADIENT<br />            Find the magnitude of the gradient of the data in the current image        buffer. Use two pixels on either side of current pixel for gradient.<br />        <br />        GSMOOTH dx [dy]<br />            Gaussian Smoothing of the data. dx and dy are the smoothing size        parameters. If dy is omitted, it is taken as dx. dx and dy must be odd.        1/e2 weighting at (dx-1)/2 and (dy-1)/2<br />        <br />        GTEMPIMAGE name<br />            Get temporary image that has been previously saved using STEMP.<br />        <br />        GETNEXT<br />            Get the next image from the file opened with the OPENFILE command.        If no additional image data is available, the open file is closed.<br />        <br />        GIGE command<br />            Available in oma2cam. Commands are as follows:<br />            ACQuire (gets frames in MULTIFRAME mode)<br />            EXPosure &lt;exposureTime&gt; (in microseconds)<br />            GAIn &lt;gain&gt; (0 - 33)<br />            RED &lt;Red channel gain percent -&gt; 100% = no gain applied&gt;<br />            BLUe &lt;Blue channel gain percent -&gt; 100% = no gain applied&gt;<br />            NUMber &lt;numberOfFrames&gt; (to be acquired by the ACQUIRE        command; default is 1)<br />            RATe &lt;frameRate&gt;<br />            LABON (label frames)<br />            LABOFf (don't label frames)<br />            PREview &lt;numberFrames&gt; (show preview for specified number of        frames)<br />            EXTernal (set external triggering)<br />            INTernal (set internal triggering)<br />            DELay &lt;triggerDelay&gt; (set the trigger delay [microseconds])<br />            SFMemory &lt;numFrames&gt; (save the specified number of frames to        one big image in memory. Uses specified frame RATE. Saves time stamp        seconds to extra.)<br />            SFRames &lt;filename&gt; &lt;numFrames&gt; (save the specified        number of frames using the specified filename. Uses FREERUN mode. Also        saves a text file showing frame times.)<br />            STAtus (print camera settings)<br />            FIXbad &lt;flag&gt; (set flag to 1 to clear bad pixels before        display or save --&gt; must use FINDBAD first)<br />            DISplay &lt;flag&gt; (set flag to 1 to display during acqusition)<br />            HDR &lt;filename&gt; &lt;numFrames&gt; &lt;multiplier&gt; (save the        specified number of frames using the specified filename. Subsequent        exposure times are multiplied by the multiplier.)<br />        <br />        GNOISE mean rms [seed]<br />            Gaussian deviate generator using built-in random-number generator        followed by Box-Muller transform.<br />        <br />        HELP [command name or fragment]<br />            If a command name is given, a brief explanation of the command is        printed in the command window. If only part of the command is given, a        description of all commands that match the command fragment is printed.        All help information is from the file "OMA HELP." If no argument is        given, all command names are printed with no explanation.<br />        <br />        HDRACADD<br />            Adds the current image data buffer to the HDR accumulator buffer.        Values greater than the cutoff are excluded and values are then        normalized by the exposure time.<br />        <br />        HDRACCUMULATE cutoffMax cutoffMin<br />            Allocates and clears memory for an HDR accumulator that can be used        to generate HDR images from a series of different exposures. The cuttoff        value should be less than the saturation value for the detector. Values        less than cutoffMin are not included; the default for cutoffMin is 0.        The size of the accumulator is determined by the image size parameters        when the accumulate command is first given. Be sure the exposure value        for the image is set (e.g., imported from a raw file or set using the        EXPOSURE command).<br />        <br />        HDRACDELETE<br />            Frees the memory associated with the HDR accumulator.<br />        <br />        HDRACGET<br />            Calculates an HDR image based on the data in the HDR accumulator and        moves that to the current image. The previous contents of the image data        buffer are destroyed.<br />        <br />        HDRNUMGET<br />            Returns an image based on the data in the HDR counter, which has the        number of images that contribute to the HDR image at each pixel. This        "counter" image becomes the current image. The previous contents of the        image data buffer are destroyed.<br />        <br />        HOBJSETTINGS &lt;decodeFlag&gt; &lt;demosaicSetting&gt;        &lt;clearBadPixelsFlag&gt;<br />            With no arguments, this command gives information on how .hobj files        will be read in. If arguments are given, the decodeFlag,        demosaicSetting, and clearBadPixelsFlag are specified. A nonzero        decodeFlag will cause automatic decoding of .hobj files when they are        read in. The demosaicSetting has the following values/meanings: 0 = no        demosaicing done (appropriate for monochrome images); 1 = treat as a        color image and demosaic using DOC2RGB 0 1 1 2; 2 = treat as a color        image and demosaic using the bilinear algorithm with the red pixel at        0,0; 3 = treat as a color image and demosaic using the Malvar algorithm        with the red pixel at 0,0. If the clearBadPixelsFlag is set, bad pixels        previously specified with FINDBAD or READBAD will be set to the average        of their eight nearest neighbors (of the same color -- assumes this is a        raw color image).<br />        <br />        IF condition<br />            If condition evaluates to a non-zero value, the commands following        the IF are executed. However, if the condition is zero, the commands        between IF and ENDIF are not executed. The condition can be any        arithmetic statement and can include logical operators &lt; (less than),        &gt; (greater than), others to come....<br />        <br />        IFNOT condition<br />            If condition evaluates to a ZERO value, the commands following the        IF are executed. However, if the condition is nonzero, the commands        between IF and ENDIF are not executed. The condition can be any        arithmetic statement and can include logical operators &lt; (less than),        &gt; (greater than), others to come....<br />        <br />        INVERT<br />            Inverts the image in the current image data buffer, causing the        first data point to become the last data point.<br />        <br />        INTEGRATE direction_flag selection_flag do_average<br />            Sum up the data in the horizontal ( direction_flag=0 ) or vertical        (direction_flag=1)direction. The two-dimensional image becomes a single        line. If selection_flag=1, the subset of the image specified by the        selection rectangle is used. Possible cases are:<br />            direction_flag = 1 The result is an array in x; sum in y direction<br />            direction_flag = 0 The result is an array in y; sum in x direction<br />            selection_box = 1 A selection box specifies what region to sum<br />            selection_box = 0 Sum all channels or tracks <br />            do_average = 1 Average along the integrate direction (divide by box        size in integration direction)<br />            do_average = 0 Just sum, don't average<br />        <br />        INTFILL direction_flag selection_flag do_average<br />            This works like the INTEGRATE command but a two-dimensional image is        formed by duplicating the summed values. If selection_flag=1, the new        image will be the size of the currently defined rectangle.<br />        <br />        INTVARIABLE variable_name<br />            Specifies that variable_name is to be used as an integer variable.<br />        <br />        IM2SEQUENCE filename frames<br />            Save the current image as a sequence of images with the specified        number of frames. This type of data file can be used by the SEQ2HDR        command.<br />        <br />        KILLBOX [value]<br />            Much like FILLBOX, this command works on the region of the image        that has been specified with the RECT command or mouse. The contents of        this region are set to 'value'. Default for 'value' is 0.<br />        <br />        KWABEL n<br />            Uses analytic evaluation of integral required for abel inversion,        which involves a lot of evaluations of ln(x). n is a scale factor for        the image.<br />        <br />        LIST<br />            Lists the current detector parameters and log block.<br />        <br />        LABEL text_string<br />            Display the text_string in the upper left of the current window.<br />        <br />        LOG [n] [comment]<br />            Adds a comment to the comment buffer at line n. If n is not        specified, the comment is added to the beginning of the comment buffer.        If "comment" is not present, the program prompts for additional comment        lines until a null comment is entered (i.e. &lt;CR&gt; only). If the        optional "comment" is included on the same line, the text of "comment"        replaces any comment already existing at line n and no further comment        lines are solicited.<br />        <br />        LMACRO<br />            Lists the contents in the current macro buffer.<br />        <br />        LOOP variable_name start end [step]<br />            Initializes a loop. The variable_name can be any string of        reasonable length. The variable takes on the initial value specified by        "start" and the commands within the loop are repeated until the variable        is &gt;= "end". ( or &lt;= "end" if step &lt; 0) If step is not        specified, a step of 1 is assumed. The end of the loop is specified by        the LOOPND command. Each LOOP must have a corresponding LOOPND. To        access the value of a loop variable, precede variable_name with "@" For        example:<br />            loop fnum 2 10 2<br />            get data@fnum<br />            disp<br />            loopnd<br />            .<br />            .<br />            Note: To signify the end of a variable name when it is followed by        other characters, use a '\' character. For example:<br />            loop fnum 2 10 2<br />            get data@fnum\_corrected<br />            disp<br />            loopnd<br />        <br />        LOOPBREAK<br />            Break out of current loop.<br />        <br />        LOOPND<br />            Specifies the end of a loop initiated with the LOOP command.<br />        <br />        LOOKUP fn_number <br />            Redefine the current image using the lookup table specified by a        tabulated function. Use GETFUNCT n filename before using this command.<br />        <br />        LTEMPIMAGE <br />            List defined temporary images.<br />        <br />        LN<br />            Returns the natural log of the current image.<br />        <br />        MACRO [n m]<br />            Like "RMACRO [n m]" except that printing of intermediate output is        automatically suppressed.<br />        <br />        MAKNEW n m<br />            Change the resolution of the data in the current data buffer to be n        rows x m columns. Bilinear interpolation is performed.<br />        <br />        MASK&gt; value<br />            Create a mask based on values in the current image greater than or        equal to the specified value. Mask values are 0 or 1.<br />        <br />        MASK&lt; value<br />            Create a mask based on values in the current image less than the        specified value. Mask values are 0 or 1.<br />        <br />        MATCH image2_data_file<br />            This command is used to create matching image pairs from images        taken with different magnification, displacement, and rotation. The        first image is assumed to be in the current image buffer.        "image2_data_file" specifies the name of a file containing the second        image. The necessary image matching parameters are stored in an ASCII        text file and must be loaded with the GETMATCH command prior to        executing the MATCH command. The command creates two new images and        stores them in files named Match_1 and Match_2. Image 1 should be the        lower resolution of the two.<br />        <br />        MIRROR<br />            Form a left-right mirror image operation on the data in the current        data buffer.<br />        <br />        MULFILE &lt;filename&gt;<br />            Multiplies the contents of the current data buffer by the contents        of the specified file.<br />        <br />        MULTMPIMAGE name<br />            Multiplies the contents of the current data buffer by the contents        of the named temporary image.<br />        <br />        MYSQSERVER server userName password databaseName<br />            Opens a new connection to the named MYSQL database on the specified        server (e.g., cld3.eng.yale.edu) with the userName and password        specified. See also SQLNEW [qtoma command]<br />        <br />        MYSQTABLE tableName<br />            Creates a table named tableName on the open MYSQL server if it        doesn't already exist. The table will contain a numbered imageID and        imageData containing the image displayed in the current data window. In        addition, any variable name beginning with "sql" will be added as a        column to the table (minus the "sql"). [qtoma command]<br />        <br />        NEWWINDOW flag<br />            If flag = 1 (default), a new window will be opened for each        "DISPLAY" command. If flag = 0, the results of "DISPLAY" commands will        be placed in the last-opened window. If no window exists, a new one will        be opened. <br />        <br />        NEXTFILE [prefix]<br />            Open the next file specified in the FileNames file that was opened        with the GetFileNames command. If a prefix is specified, that is added        to the name before trying to open the file. command_return_1 is the the        filename without any prefix and without the extension (last 4        characters).<br />        <br />        NEXTPREFIX<br />            Set the "Get File" prefix to be the next string specified in the        FileNames file that was opened with the GetFileNames command.<br />        <br />        NOISE average rms [seed]<br />            Creates a noise image with the specified average and rms. See also        GNOISE.<br />        <br />        NAN2ZERO<br />            Set any nan values to 0.<br />        <br />        OPENFILE &lt;filename&gt;<br />            Reads data from the specified filename but does not close it. If        there is more than one image in the file, the GETNEXT command will read        the next image. This type of multi-image data file can be created with        the CREATEFILE, CONCATFILE, CLOSEFILE commands, or may be produced by        some cameras.<br />        <br />        PIXSIZE [WindowScaleFactor]<br />            Specifies a scale factor used to determine the size of a window        displayed. PIXSIZE 1 associates one screen point with one data point. If        WindowScaleFactor is negative, a scale factor of -1/WindowScaleFactor is        used. If no argument is given, the current WindowScaleFactor is printed.<br />        <br />        PIXVALUE row column<br />            Prints the value of the pixel at the specified row and column. The        upper left of an image is at 0,0. If the image is color, prints RGB        values. command_return_1 is the value for BW images; command_return_1 -        command_return_3 are RGB for color images.<br />        <br />        POSITVE<br />            Sets all negative values in the image buffer to 0.  Positive values        are unaffected.<br />        <br />        POWER y<br />            Raise the data in the current image buffer to the power y (float).<br />        <br />        RAMP<br />            Fill current image with a ramp from 0 to the number of number of        channels.<br />        <br />        RECTANGLE ulx uly lrx lry<br />            Specify a rectangle that calculations are to be done on. The        arguments are upper left x coordinate; upper left y coordinate; lower        right x; lower right y.<br />        <br />        RGB2RED<br />            Get the red channel of the current color image.<br />        <br />        RGB2GREEN<br />            Get the green channel of the current color image.<br />        <br />        RGB2BLUE<br />            Get the blue channel of the current color image.<br />        <br />        RGB2COLOR colorNumber<br />            Get the red, green, or blue channel of the current color image for        colorNumber = 1, 2, or 3.<br />        <br />        RMACRO [n m]<br />            Starts executing commands in the macro buffer with %d being replaced        first by value n. Subsequently, n is incremented by the amount specified        in the INCMACRO command (default is 1). If the new numeric value is        equal to m, the macro will be executed again. Menu items can be selected        and the appropriate commands executed during macros. Commands typed        during the execution of a macro will be echoed to the terminal but not        performed. To stop a macro during execution type "cmd ." (hold down the        apple key and type ".")<br />        <br />        ROW n<br />            Resets the number of rows in the current image to n.<br />        <br />        ROTATE [value]<br />            Rotates the data in the current image buffer.  If no value is        specified, the image is rotated by 90 degrees. If a value is specified,        the image is rotated by the specified number of degrees (this may be a        real number).<br />        <br />        READBADPIX filename<br />            Read in bad pixel data from a text file (e.g., from a file saved        with WRITEBADPIX).<br />            Format is:<br />            # of bad pixels<br />            detector_width    detector_height<br />            bad_pix1_x bad_pix1_y<br />            bad_pix2_x bad_pix2_y<br />            .<br />            .<br />            .<br />        <br />        RNDOFF<br />            Round the DATAWORD values Down to the nearest integer value.<br />        <br />        RNDUP<br />            Round the DATAWORD values UP to the nearest integer value.<br />        <br />        RULER [numpix] [numunits] [unit name] <br />            Can be used to specify the number of pixels that correspond to a        length unit. "numpix" and "numunits" are both floating point arguments.        An optional string can be included to define the units (e.g., "mm" or        "feet"). If no arguments are given, the current scale factor will be        printed. The scale factor defined with the RULER command is used (1)        when printing lengths using the ruler tool in the status window, (2)        when reporting contour lengths generated by the "Plot Contours" menu        command, and (3) when reporting the x and y "center of mass" using the        calculate rectangle tool in the status window. Scale factor info is        saved with data files and will be reloaded automatically when the files        are retrieved. To "un-define" a ruler, give only one argument.<br />        <br />        REMAP Value1 Value2 [Value3]<br />            With two arguments, every occurence of Value1 in the current image        is replaced with Value2. With three arguments, values in the range from        Value1 to Value2 are set to Value3.<br />        <br />        SAVEFILE &lt;filename&gt;<br />            Saves the current data buffer to the specified file.<br />        <br />        SAVSETTINGS [filename]<br />            Saves the current settings to the specified file (uses the        appropriate prefix and suffix specified in the preferences). If no        filename is given, OMA Settings are saved within the oma application. <br />        <br />        SATIFF &lt;filename&gt; <br />            Converts the contents of the OMA Image buffer to 8 bit unsigned data        and then uses the LibTIFF TIFFWriteEncodedStrip function to save the        data to a TIFF image specified on the command line. The 'save' file        prefixes are used. A ".tif" extension is automatically appended to the        filename. To save as a color image, use the COLORFLAG command to set the        flag appropriately.<br />        <br />        SATIFFSCALED min max &lt;filename&gt;<br />            Convert image to 16 bit and save as a TIFF file. Uses the specified        min and max for scaling rather than the min and max of the image in the        buffer. Results will be between 0 - 65535. Depending on min and max, the        image may be clipped or the full 16-bit dynamic range may not be used.        To save as a color image, use the COLORFLAG command to set the flag        appropriately.<br />        <br />        SAVEJPG &lt;filename&gt;<br />            Saves the current image bitmap to a JPG file. The current display        parameters are used to create the bitmap. Include the .jpg extension in        the file name.<br />        <br />        SAVEPDF &lt;filename&gt;<br />            Saves the current data window image to a PDF file. Any text labels        that are displayed on the data window will be part of the pdf. Include        the .pdf extension in the file name.<br />        <br />        SERCLOSE<br />            Closes the serial port opened with the last "SERIAL device_name"        command. This can be used if you need to talk to more than one serial        device -- open device 1, send commands, close the serial port, open        device 2, send commands, and so forth. Available in oma2cam.<br />        <br />        SERIAL device_name (or character_string) [baudRate Timeout]<br />            Provides a simple way of sending text strings to a serial device.        For example, a KeySpan USB to serial converter can be used to control a        variety stepping motor controllers, spectrographs, arduinos etc. The        device name should be something like "/dev/tty.KeySpan1" Note that        upper/lower case matters on these specifications. Look in the "/dev"        directory to find the name of your specific hardware. When opening a        device, the baud rate and timeout value (in thenths of seconds) can be        specified. Defaults are baud = 9600 and timeout = 0. After opening the        device with the first SERIAL command, subsequent SERIAL commands will        send across the specified character_string, followed by a &lt;CR&gt;.        This uses standard POSIX calls.  Available in oma2cam.<br />        <br />        SIZE rows cols <br />            Set the number of rows and columns of the current image and zero the        data.<br />        <br />        SINGRID radius<br />            Draw a grid from the sine function.<br />        <br />        STEMPIMAGE name<br />            Save current image as temporary image with specified name. The name        can be 0-9 or a text string beginning with a lower case letter. This can        be retrieved with GTEMP.<br />        <br />        STRMACRO string<br />            Specifies that "string" is to be substituted for any "%s" found in        macro or execute commands. If no string is specified, the current string        is printed.<br />        <br />        SMOOTH [n,m]<br />            Performs an n x m smoothing operation on data in the current image        buffer.  If only n is specified, an n x n smoothing is done; with no        argument, a 2 x 2 smoothing is performed.  For the smoothing operation        to be perfectly centered on each data point, the arguments must be odd.        For Gaussian smoothing, use GSMOOTH.<br />        <br />        SUBFILE &lt;filename&gt;<br />            Subtracts the contents of the specified file from the data in the        current buffer.<br />        <br />        SHELL shell_command<br />            Opens a pipe to a shell and sends along the command. Output from the        command is echoed to the command window.<br />        <br />        STOPONERROR flag<br />            If flag = 1, macro or execute commands will stop on error        conditions. If flag = 0 (default) execution will continue.<br />        <br />        SBIG command_string [parameters]<br />            [This command is only available in oma2cam. The SBIG drivers must be        installed.]<br />            command_string specifies the SBIG command (listed below).<br />             Only the first 3 characters of SBIG commands matter.<br />             The values for parameters depend on the particular command.<br />            .<br />             SBIG command_strings:<br />             .<br />             EXPosure exposure_time<br />                Specify exposure_time in seconds. Does not take an image.<br />            .<br />             FILter<br />                 Specify which fillter to use.<br />            .<br />             TEMperature<br />                 Specify set temperature of the CCD in degrees C.<br />            .<br />             DISconnect<br />                 Close the device and driver.<br />            .<br />             STAtus <br />                 Print out CCD info, temperature, exposure, etc.<br />            .<br />             ACQuire <br />                Get an image using the current settings.<br />        <br />        SUBTMPIMAGE name<br />            Subtracts the contents of the named temporary image from the data in        the current buffer.<br />        <br />        SEQ2HDR filename cutoff<br />            Convert a sequence of images with different exposures to an HDR        image. The file contains all images and must have information on        exposures stored in the EXTRA data (see the EXTRA command). This type of        file can be created by GigE cameras in oma2cam or can be created using        the CREATEFILE/CONCATENATEFILE/COLSEFILE commands. Note that all        exposure information must be entered in the extra space before        CREATEFILE is used to open the file. Image values larger thatn the        cutoff value will not be included and this should be close to the        detector saturation value.<br />        <br />        SEQ2IMAGE filename<br />            Open all frames of a sequence of images to a single image whose        height is NFRAMES*FRAMEHEIGHT.<br />        <br />        SHOTNOISE seed<br />            Treat the data as counts and add random root N noise to the data.<br />        <br />        SNR gsmoothx gsmoothy aveSize<br />            Calculate the signal/noise ratio of the image by first gaussian        smoothing the image by the specified amount, then dividing the smoothed        image by the original unsmoothed image. The SNR is taken to be the rms        deviation calculated over an aveSize x aveSize area (the average is        assumed to be 1)centered on each pixel.<br />        <br />        SAY string<br />            Say the string on the computer's speaker.<br />        <br />        SCATTER [sizeX sizeY minX maxX minY maxY]<br />            Create a scatter plot of sizeX by sizeY. The current image is taken        as a pair of related data sets, with X values on the top half and Y        values on the bottom half. Values 3-6 specify alternate min and max        values for X and Y on the scatter plot. If these arguments are omitted,        the min and max of each half image is used. Default size is 250 by 250        bins in X and Y.<br />        <br />        SQLADD<br />            Adds the current displayed image to the database table previously        opened. This could be a SQLite or mySQL database.  See also MYSQSERVER        and SQLNEW [qtoma command]<br />        <br />        SQLNEW databaseName tableName<br />            Opens a new SQLite database file named databaseName.db and creates a        table named tableNameif it doesn't already exist. If databaseName.db        already exists, it is deleted and a new database started. The table will        contain a numbered imageID and imageData containing the image displayed        in the current data window. In addition, any variable name beginning        with "sql" will be added as a column to the table (minus the "sql"). See        also MYSQSERVER [qtoma command]<br />        <br />        SQLOPEN databaseName tableName<br />            Opens an existing SQLite database file named databaseName.db and        creates a table named tableName if it doesn't already exist. The table        will contain a numbered imageID and imageData containing the image        displayed in the current data window. In addition, any variable name        beginning with "sql" will be added as a column to the table (minus the        "sql"). [qtoma command]<br />        <br />        SQLCLOSE<br />            Closes any open SQL database. [qtoma command]<br />        <br />        TSMOOTH<br />            Smooth radius based on x_dim = Temp[0], y_dim = Temp[1]. This is a        function that enables (Rectangular) smoothing of an image, with variable        filter size. It works basically like SMOOTH 13 13, say, but it takes the        x_dim and y_dim locally based on the values in the  Temporary buffers        T[0] and T[1]. It has been used to variably smooth an image based on the        local length scale which was modelled.<br />        <br />        UPREFX type <br />            Force use of prefix/suffix specified by 'type.' Possible cases for        'type' include the following:<br />            s   Use Save File prefix and suffix for both saving and getting        files<br />            g   Use Get File prefix and suffix for both saving and getting files<br />            d   Use Default prefix and suffix<br />        <br />        UNFOLD<br />            Treat the current image as the right half of an image and "unfold"        it to create a new symmetric image.<br />        <br />        VARIABLES<br />            Lists currently defined variables and their values. Variables are        defined using simple arithmetic expressions, such as<br />            my_var = 10<br />            or<br />            y = my_var*2<br />            The values of variables are accessed from other commands using        @my_var. For example,<br />            + @my_var<br />            or<br />            save datfile_@4myvar<br />            As with loops, the end of a variable can be tagged by adding a '\'        For example,<br />            save datfile_@my_var\_corrected<br />            See also commands FLOAT, INTVARIABLE and VARCLEAR<br />        <br />        VARCLEAR<br />            Clears all user-defined variables.<br />        <br />        WARP subpix<br />            Remaps an image coordinate system using bilinear geometric warping.<br />            x' = a00 + a01x + a10y + a11xy<br />            y' = b00 + b01x + b10y + b11xy<br />            The 8 parameters must first be read in with the WARPARAMS command.        The subpix value specifies subpixel resolution used (default is 0.2).        Without subpixel sampling, there would likely be holes in the warped        image.<br />        <br />        WARPARAMS &lt;filename&gt;<br />            Reads in 8 warp parameters from the specified file. The format of        the text file should be as follows:<br />            a00 a01 a10 a11<br />            b00 b01 b10 b11<br />        <br />        WRITEBADPIX filename<br />            Save bad pixel data (e.g., from FINDBADPIX or READBADPIX commands)        to a text file.<br />            Format is:<br />            # of bad pixels<br />            detector_width    detector_height<br />            bad_pix1_x bad_pix1_y<br />            bad_pix2_x bad_pix2_y<br />            .<br />            .<br />            .<br />        <br />        WAITHI Channel<br />            Waits until the specified digital I/O channel is aserted high on a        LabJack U3. Channel must be in the range 4-7. [oma2cam only]<br />        <br />        X0 n<br />            Specifies that the detector is to be read out starting at column n.<br />        <br />        Y0 n<br />            Specifies that the detector is to be read out starting at row n.<br />        <br />        <br />        <br />      </div>      <div class="footer">Brought to you by Developers of OMA<br />          </div>    </div>  </body></html>